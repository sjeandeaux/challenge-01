// Code generated by protoc-gen-go. DO NOT EDIT.
// source: presentator-grpc/presentator.proto

package presentator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Point struct {
	Longitude            float64  `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float64  `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_58a7a4ae22d5538b, []int{0}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Point) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

type Request struct {
	Point                *Point   `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	ComputeAt            int64    `protobuf:"varint,2,opt,name=ComputeAt,proto3" json:"ComputeAt,omitempty"`
	Precision            int64    `protobuf:"varint,3,opt,name=Precision,proto3" json:"Precision,omitempty"`
	Smoothing            float64  `protobuf:"fixed64,4,opt,name=Smoothing,proto3" json:"Smoothing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_58a7a4ae22d5538b, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

func (m *Request) GetComputeAt() int64 {
	if m != nil {
		return m.ComputeAt
	}
	return 0
}

func (m *Request) GetPrecision() int64 {
	if m != nil {
		return m.Precision
	}
	return 0
}

func (m *Request) GetSmoothing() float64 {
	if m != nil {
		return m.Smoothing
	}
	return 0
}

type Reply struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_58a7a4ae22d5538b, []int{2}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Point)(nil), "presentator.Point")
	proto.RegisterType((*Request)(nil), "presentator.Request")
	proto.RegisterType((*Reply)(nil), "presentator.Reply")
}

func init() { proto.RegisterFile("presentator-grpc/presentator.proto", fileDescriptor_58a7a4ae22d5538b) }

var fileDescriptor_58a7a4ae22d5538b = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x8d, 0x35, 0x55, 0xa7, 0xb7, 0x41, 0x24, 0x16, 0x41, 0xc9, 0xa9, 0x17, 0x2b, 0xd4,
	0x27, 0x08, 0x8a, 0x9e, 0x84, 0x92, 0x3e, 0x41, 0x8c, 0xc3, 0xba, 0x90, 0xee, 0xae, 0x93, 0x49,
	0xa1, 0x0f, 0xe1, 0x9b, 0xf8, 0x90, 0xb2, 0x9b, 0x98, 0xc6, 0x3f, 0x97, 0x1e, 0xe7, 0xf7, 0x0d,
	0xdf, 0x37, 0xdf, 0x2e, 0xa4, 0x8e, 0xa9, 0x26, 0x23, 0x85, 0x58, 0xbe, 0x51, 0xec, 0xca, 0xdb,
	0x01, 0x98, 0x3b, 0xb6, 0x62, 0x71, 0x32, 0x40, 0x69, 0x06, 0xf1, 0xd2, 0x6a, 0x23, 0x78, 0x09,
	0xa7, 0x95, 0x35, 0x4a, 0x4b, 0xf3, 0x4a, 0x49, 0x74, 0x1d, 0xcd, 0xa2, 0x7c, 0x07, 0x70, 0x0a,
	0x27, 0x55, 0x21, 0xad, 0x78, 0x18, 0xc4, 0x7e, 0x4e, 0x3f, 0x22, 0x38, 0xce, 0xe9, 0xbd, 0xa1,
	0x5a, 0x70, 0x06, 0xb1, 0xf3, 0x76, 0xc1, 0x61, 0xb2, 0xc0, 0xf9, 0x30, 0x3e, 0x04, 0xe5, 0xed,
	0x82, 0xcf, 0xbb, 0xb7, 0x6b, 0xd7, 0x08, 0x65, 0x12, 0x2c, 0x47, 0xf9, 0x0e, 0x78, 0x75, 0xc9,
	0x54, 0xea, 0x5a, 0x5b, 0x93, 0x8c, 0x5a, 0xb5, 0x07, 0x5e, 0x5d, 0xad, 0xad, 0x95, 0x37, 0x6d,
	0x54, 0x72, 0xd4, 0xde, 0xda, 0x83, 0xf4, 0x0a, 0xe2, 0x9c, 0x5c, 0xb5, 0xc5, 0x73, 0x18, 0x33,
	0xd5, 0x4d, 0x25, 0x5d, 0x9f, 0x6e, 0x5a, 0x7c, 0x46, 0x70, 0xf1, 0x5c, 0x48, 0xe9, 0xb7, 0x33,
	0xa5, 0x98, 0x94, 0x3f, 0x6f, 0x45, 0xbc, 0xd1, 0x25, 0xe1, 0x23, 0x24, 0x7f, 0xc5, 0x07, 0xd6,
	0x1b, 0x62, 0x3c, 0xfb, 0xd1, 0xa7, 0x2b, 0x3d, 0xc5, 0x5f, 0xd4, 0x55, 0xdb, 0xf4, 0x00, 0x9f,
	0xfe, 0x0b, 0xf9, 0x7e, 0xa7, 0x3d, 0x8c, 0x5e, 0xc6, 0xe1, 0xdb, 0xee, 0xbe, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x79, 0xf5, 0x5f, 0x5c, 0xdc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MatchingAggregatorServiceClient is the client API for MatchingAggregatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatchingAggregatorServiceClient interface {
	MatchingAggregatorDriver(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
	MatchingAggregatorRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type matchingAggregatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewMatchingAggregatorServiceClient(cc *grpc.ClientConn) MatchingAggregatorServiceClient {
	return &matchingAggregatorServiceClient{cc}
}

func (c *matchingAggregatorServiceClient) MatchingAggregatorDriver(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/presentator.MatchingAggregatorService/MatchingAggregatorDriver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matchingAggregatorServiceClient) MatchingAggregatorRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/presentator.MatchingAggregatorService/MatchingAggregatorRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MatchingAggregatorServiceServer is the server API for MatchingAggregatorService service.
type MatchingAggregatorServiceServer interface {
	MatchingAggregatorDriver(context.Context, *Request) (*Reply, error)
	MatchingAggregatorRequest(context.Context, *Request) (*Reply, error)
}

// UnimplementedMatchingAggregatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMatchingAggregatorServiceServer struct {
}

func (*UnimplementedMatchingAggregatorServiceServer) MatchingAggregatorDriver(ctx context.Context, req *Request) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MatchingAggregatorDriver not implemented")
}
func (*UnimplementedMatchingAggregatorServiceServer) MatchingAggregatorRequest(ctx context.Context, req *Request) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MatchingAggregatorRequest not implemented")
}

func RegisterMatchingAggregatorServiceServer(s *grpc.Server, srv MatchingAggregatorServiceServer) {
	s.RegisterService(&_MatchingAggregatorService_serviceDesc, srv)
}

func _MatchingAggregatorService_MatchingAggregatorDriver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchingAggregatorServiceServer).MatchingAggregatorDriver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presentator.MatchingAggregatorService/MatchingAggregatorDriver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchingAggregatorServiceServer).MatchingAggregatorDriver(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MatchingAggregatorService_MatchingAggregatorRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchingAggregatorServiceServer).MatchingAggregatorRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presentator.MatchingAggregatorService/MatchingAggregatorRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchingAggregatorServiceServer).MatchingAggregatorRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _MatchingAggregatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "presentator.MatchingAggregatorService",
	HandlerType: (*MatchingAggregatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MatchingAggregatorDriver",
			Handler:    _MatchingAggregatorService_MatchingAggregatorDriver_Handler,
		},
		{
			MethodName: "MatchingAggregatorRequest",
			Handler:    _MatchingAggregatorService_MatchingAggregatorRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "presentator-grpc/presentator.proto",
}
